<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Haskell on Miaulog</title>
    <link>http://log.tuxedokatze.com/tags/haskell/</link>
    <description>Recent content in Haskell on Miaulog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>tuxedocat / CC BY-NC-SA 4.0</copyright>
    <lastBuildDate>Mon, 30 Jan 2012 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://log.tuxedokatze.com/tags/haskell/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Haskell: Installing ghc without root privilege</title>
      <link>http://log.tuxedokatze.com/post/2012-01-30-installing-ghc-without-root/</link>
      <pubDate>Mon, 30 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>http://log.tuxedokatze.com/post/2012-01-30-installing-ghc-without-root/</guid>
      <description>Get OS specific &amp;ldquo;Binary Packages&amp;rdquo; $cd /home/foo $wget http://www.haskell.org/ghc/dist/7.0.4/ghc-7.0.4-x86_64-unknown-linux.tar.bz2 $tar -xvf ghc-7.0.4-x86_64-unknown-linux.tar.bz2  Configure and install as usual $cd ghc-7.0.4 $./configure --prefix=/home/foo/usr #something like this... $make install  Notes You will obviously need to install cabal from somewhere else&amp;hellip; Using haskell-platform will make it easier.
$cd /home/foo $wget http://lambda.haskell.org/platform/download/2011.4.0.0/haskell-platform-2011.4.0.0.tar.gz $cd haskell-platform-2011.4.0.0 $./configure --prefix=/home/foo/usr $make $make install  Reference: Stackoverflow</description>
    </item>
    
    <item>
      <title>Simple programming: FizzBuzz</title>
      <link>http://log.tuxedokatze.com/post/2012-01-18-fizzbuzz/</link>
      <pubDate>Wed, 18 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>http://log.tuxedokatze.com/post/2012-01-18-fizzbuzz/</guid>
      <description>In Python [(i%3==0)*&amp;quot;Fizz&amp;quot;+(i%5==0)*&amp;quot;Buzz&amp;quot;or i for i in range(1,100)]  (this won&amp;rsquo;t work for i = 0)
In Haskell In ghci:
[if (mod x 15)==0 then &amp;quot;FizzBuzz&amp;quot; else if (mod x 5)==0 then &amp;quot;Buzz&amp;quot; else if (mod x 3)==0 then &amp;quot;Fizz&amp;quot; else (show x) | x String fizzBuzz x | (mod x 15)== 0 = &amp;quot;FizzBuzz&amp;quot; | (mod x 5) == 0 = &amp;quot;Buzz&amp;quot; | (mod x 3) == 0 = &amp;quot;Fizz&amp;quot; | otherwise = show x  then, load into the interpreter,</description>
    </item>
    
  </channel>
</rss>