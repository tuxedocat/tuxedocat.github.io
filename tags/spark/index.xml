<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Miaulog</title>
    <link>http://log.tuxedokatze.com/tags/spark/index.xml</link>
    <description>Recent content on Miaulog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>tuxedocat / CC BY-NC-SA 4.0</copyright>
    <atom:link href="http://log.tuxedokatze.com/tags/spark/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Spark-SQL DataFrame: Selecting multiple columns</title>
      <link>http://log.tuxedokatze.com/post/2016-10-31-spark-sql-select/</link>
      <pubDate>Mon, 31 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>http://log.tuxedokatze.com/post/2016-10-31-spark-sql-select/</guid>
      <description>&lt;p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;val columnNames = Seq(&amp;quot;col1&amp;quot;,&amp;quot;col2&amp;quot;,.....&amp;quot;coln&amp;quot;)

// using the string column names:
val result = dataframe.select(columnNames.head, columnNames.tail: _*)

// or, equivalently, using Column objects:
val result = dataframe.select(columnNames.map(c =&amp;gt; col(c)): _*)
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;_* transforms a collection into a vararg argument - used when calling a method expecting a vararg, like select does: def select(col: String, cols: String*)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;ref. &lt;a href=&#34;http://stackoverflow.com/questions/36131716/scala-spark-dataframe-dataframe-select-multiple-columns-given-a-sequence-of-co&#34;&gt;http://stackoverflow.com/questions/36131716/scala-spark-dataframe-dataframe-select-multiple-columns-given-a-sequence-of-co&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cloudera CDHの手動インストールとVMクラスタ構築方法</title>
      <link>http://log.tuxedokatze.com/post/2016-09-14-ClouderaCDH5-8-Setup/</link>
      <pubDate>Wed, 14 Sep 2016 20:29:20 +0900</pubDate>
      
      <guid>http://log.tuxedokatze.com/post/2016-09-14-ClouderaCDH5-8-Setup/</guid>
      <description>

&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;master (namenode, service): cdh-vm1.local&lt;/li&gt;
&lt;li&gt;slave (datanode, worker): cdh-vm2.local, cdh-vm3.local&lt;/li&gt;
&lt;li&gt;VM: CentOS 7.2 VirtualBox 4Cores 8GB RAM&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;固定IPの設定（VBのBridge Networkを利用）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/hosts&lt;/code&gt; の編集&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;ipaddr 1&amp;gt;    cdh-vm1.local    cdh-vm1
&amp;lt;ipaddr 2&amp;gt;    cdh-vm2.local    cdh-vm2
&amp;lt;ipaddr 3&amp;gt;    cdh-vm3.local    cdh-vm3
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;/etc/yum.conf&lt;/code&gt; 内での プロキシサーバーの設定&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;SELinuxの停止（※安全だといえる環境なら…）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sed -i -e &#39;s/SELINUX=.*/SELINUX=disabled/g&#39; /etc/selinux/config&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reboot&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Firewalldの停止（※安全だといえる環境なら…）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;systemctl stop firewalld&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;systemctl disable firewalld&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;セットアップ用ユーザーの作成&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;パスワードを同一のものを使う場合: Superuserもしくは、パスワードレスでsudoが利用できるユーザーを作成

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/etc/ssh/ssh_config&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;StrictHostKeyChecking no&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;公開鍵認証を使う場合: &lt;code&gt;ssh-keygen&lt;/code&gt; &lt;code&gt;enter x 2&lt;/code&gt; &lt;code&gt;cp .ssh/id_rsa.pub .ssh/authorized_keys&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PubkeyAuthentication yes&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;VMのリンククローンを行う。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MACアドレスはリセットしておく。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;… ここまでをVagrant + Ansibleで構築すると楽。&lt;/p&gt;

&lt;h2 id=&#34;cloudera-cdhの入手&#34;&gt;Cloudera CDHの入手&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.cloudera.com/downloads/cdh/5-8-0.html&#34;&gt;Download CDH 5.8.0&lt;/a&gt; をよく読む&lt;/p&gt;

&lt;p&gt;特に、一番簡単なのは、 &lt;a href=&#34;http://www.cloudera.com/documentation/enterprise/latest/topics/cm_ig_install_path_a.html#cmig_topic_6_5&#34;&gt;Installation Path A - Automated Installation by Cloudera Manager (Non-Production Mode)&lt;/a&gt;
以下の流れとなる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;master への Cloudera Managerのインストール&lt;/li&gt;
&lt;li&gt;master の Cloudera Manager から、slave へのCDH5.8インストール&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;master-への-cloudera-managerのインストール&#34;&gt;master への Cloudera Managerのインストール&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://archive.cloudera.com/cm5/installer/latest/cloudera-manager-installer.bin
chmod u+x cloudera-manager-installer.bin
sudo ./cloudera-manager-installer.bin
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;slave-への-cdhインストール&#34;&gt;slave への CDHインストール&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;VMを全機立ち上げる&lt;/li&gt;
&lt;li&gt;master上で、ブラウザから &lt;code&gt;cdh-vm1:7180/cmf/login&lt;/code&gt; へアクセスする&lt;/li&gt;
&lt;li&gt;ライセンス条項を読み、同意&lt;/li&gt;
&lt;li&gt;無償版（Express）、有償版（Enterprise）トライアルなどの選択肢が表示されるが、今回は無償版のExpressを選択&lt;/li&gt;
&lt;li&gt;クラスタのセットアップのために、クラスタに含まれる全ノード（masterも含む）を選択する&lt;/li&gt;
&lt;li&gt;インストール方法は以下の２つ。後者がおすすめ、とあるが、頻繁にアップデートしない環境の場合、前者でもよい。今回は、色々な都合で前者を選択。

&lt;ul&gt;
&lt;li&gt;Package manager 経由 （RPM, DEB）&lt;/li&gt;
&lt;li&gt;Cloudera Percel での配布&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Oracle JDKのインストールに☑を入れる。&lt;/li&gt;
&lt;li&gt;インストールに使用するユーザーの設定

&lt;ul&gt;
&lt;li&gt;root もしくは NOPASSWD 設定の sudoerユーザー&lt;/li&gt;
&lt;li&gt;共通パスワードもしくは公開鍵を指定する&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;全ノードでManagerおよびCDHのインストールが行われる&lt;/li&gt;
&lt;li&gt;どのServiceを利用するか選択する&lt;/li&gt;
&lt;li&gt;どのノードをどの役割（Role）に割り当てるか選択する

&lt;ul&gt;
&lt;li&gt;今回は初期設定のまま&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;各種Serviceの詳細設定

&lt;ul&gt;
&lt;li&gt;今回は初期設定のまま&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;セットアップ状況の検証&lt;/li&gt;
&lt;li&gt;完了&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>