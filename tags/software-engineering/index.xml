<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Miaulog</title>
    <link>http://log.tuxedokatze.com/tags/software-engineering/index.xml</link>
    <description>Recent content on Miaulog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>tuxedocat / CC BY-NC-SA 4.0</copyright>
    <atom:link href="http://log.tuxedokatze.com/tags/software-engineering/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>「ソフトウェア見積り 人月の暗黙知を解き明かす」を読んだ</title>
      <link>http://log.tuxedokatze.com/post/2016-03-04-software-estimation/</link>
      <pubDate>Fri, 04 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://log.tuxedokatze.com/post/2016-03-04-software-estimation/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/ebook/dp/B00KR96M6K&#34;&gt;スティーブ・マコネル,「ソフトウェア見積り 人月の暗黙知を解き明かす」&lt;/a&gt; をさっと読んだ。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;現場での実践に注力する「アートとしての見積り」を定義し、その観点からソフトウェア開発（他の知的生産プロジェクトでも当てはまるけど）につきものである不確実さをどのように見積りで考慮するか、そしてアートとしての見積りの限界を示す本だったように感じた。&lt;/p&gt;

&lt;p&gt;アートとしての見積りとサイエンスとしての見積り、という概念をこの本では知ることができた。前者が本書の主な対象で、経験的な根拠に基づいた基本的な見積り手法や、見積りそのものの方法論を扱う。後者は、ソフトウェア工学の知見を多分に含む、学術的で理論に基づく数式を駆使した見積り手法。&lt;/p&gt;

&lt;p&gt;後半で紹介されたいろいろな手法についてはなるほどな〜という感想しかわかなかった。それは開発経験が足りないからであって本の問題ではない。
（明日から使える小規模プロジェクトにおける規模の見積り・ターゲットの重要度の見積り方法、例えば「Tシャツのサイズ分け」などは早速試してみた。）&lt;/p&gt;

&lt;p&gt;個人的にこの本で得られた知見があるとすれば、「見積りと計画の違い」「ターゲットとコミットメントの違い」「不確実性のコーン」の3つの概念とその説明が有益だったと思う。
というのは、そもそもこうした概念が自分にも、少なくとも周囲の環境にも浸透していない気がするからだ。
こと今の会社の現場においては、技術者もマネージャーも無頓着な場合が多く、例えば見積りは更新されうるものだということを理解している人は少なそうな気がする。&lt;/p&gt;

&lt;p&gt;自分がプロジェクト自体の見積りの責任者になるのはすぐには考え難いけど、どういう心持ちで見積りを見ればいいのか、どういうものであるべきなのか、という感覚を持つのは、自衛にしても社会的利益のためにしても、必要なんじゃないかなと思った。
読んでよかった。&lt;/p&gt;

&lt;h4 id=&#34;mar-21-2016&#34;&gt;Mar 21. 2016&lt;/h4&gt;

&lt;p&gt;なんかセールで半額になってた。つらい。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>