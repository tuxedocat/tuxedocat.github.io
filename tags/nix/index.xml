<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nix on miauhaus.log</title>
    <link>https://log.tuxedokatze.com/tags/nix/index.xml</link>
    <description>Recent content in Nix on miauhaus.log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy;2011-2018 tuxedocat</copyright>
    <atom:link href="https://log.tuxedokatze.com/tags/nix/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Dokuwikiで日本語PDFを出力したかった</title>
      <link>https://log.tuxedokatze.com/2015/dokuwiki%E3%81%A7%E6%97%A5%E6%9C%AC%E8%AA%9Epdf%E3%82%92%E5%87%BA%E5%8A%9B%E3%81%97%E3%81%9F%E3%81%8B%E3%81%A3%E3%81%9F/</link>
      <pubDate>Wed, 18 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://log.tuxedokatze.com/2015/dokuwiki%E3%81%A7%E6%97%A5%E6%9C%AC%E8%AA%9Epdf%E3%82%92%E5%87%BA%E5%8A%9B%E3%81%97%E3%81%9F%E3%81%8B%E3%81%A3%E3%81%9F/</guid>
      <description>&lt;p&gt;CentOS6.6, Dokuwiki Hrun、Dw2Pdf_20150622でのこと。&lt;/p&gt;

&lt;p&gt;そのままでも一応日本語は出力されるが、中国語フォントだったり、豆腐になったりしたので、いろいろやらなきゃならなかった。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ipagp.ttf等を&lt;code&gt;dw2pdf/mpdf/ttffonts/&lt;/code&gt;へ格納&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dw2pdf/mpdf/config_lang2fonts.php&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;East Asian&lt;/code&gt;のところで &lt;code&gt;$unifont = &amp;quot;ipagp, sjis, sjisB&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dw2pdf/mpdf/lang2fonts.css&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:lang(&amp;quot;ja&amp;quot;)&lt;/code&gt;のところで&lt;code&gt;font-family: ipagp;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dw2pdf/conf/style.css&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;body {font-family: ipagp, sans-serif; }&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dw2pdf/DokuPDF.class.php&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;_constructer&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$this-&amp;gt;useAdobeCJK = true;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>The workflow for my thesis</title>
      <link>https://log.tuxedokatze.com/2012/the-workflow-for-my-thesis/</link>
      <pubDate>Wed, 07 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://log.tuxedokatze.com/2012/the-workflow-for-my-thesis/</guid>
      <description>&lt;h1 id=&#34;overview&#34;&gt;Overview&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Write thesis body in &lt;a href=&#34;http://johnmacfarlane.net/pandoc/README.html#pandocs-markdown&#34;&gt;Pandoc Markdown&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Build latex sources and pdf using &lt;a href=&#34;https://code.google.com/p/waf/&#34;&gt;Waf build system&lt;/a&gt;.

&lt;ol&gt;
&lt;li&gt;Do with thesis pandoc &lt;a href=&#34;http://johnmacfarlane.net/pandoc/README.html#templates&#34;&gt;template&lt;/a&gt; file if you need.&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h1 id=&#34;example-of-wscript&#34;&gt;Example of wscript&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;wscript&lt;/code&gt; is like Makefile for Waf.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;srcdir=&#39;.&#39;
blddir=&#39;build&#39;

def configure(ctx):
    ctx.load(&#39;tex&#39;)
    if not ctx.env.LATEX:
        ctx.fatal(&#39;The program LaTex is required&#39;)


from waflib.Configure import conf
@conf
def mktex(ctx):
    ctx.exec_command(&#39;pandoc %s -t latex --template ./pandoc-template.tex -o %s&#39;%(&#39;mthesis.markdown&#39;, &#39;mthesis.tex&#39;))

def view_pdf(bld):
    bld.exec_command(&amp;quot;open -a Preview \&amp;quot;{0}/mthesis.pdf\&amp;quot;&amp;quot;.format(blddir))

def build(bld):
    bld(
            features = &#39;tex&#39;,
            type     = &#39;xelatex&#39;, # pdflatex or xelatex
            source   = &#39;mthesis.tex&#39;, # mandatory, the source
            outs     = &#39;pdf&#39;, # &#39;pdf&#39; or &#39;ps pdf&#39;
            deps     = &#39;crossreferencing.lst&#39;, # to give dependencies directly
            prompt   = 1, # 0 for the batch mode
        )
    bld.install_files(&#39;${PREFIX}&#39;,&#39;output_pdf_file.pdf&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;example-of-make-ing&#34;&gt;Example of &amp;lsquo;make&amp;rsquo;-ing&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./waf clean configure mktex build view_pdf
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;sublimetext2-build-system-setting&#34;&gt;SublimeText2 build system setting&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;    {
        &amp;quot;working_dir&amp;quot; : &amp;quot;$filedir&amp;quot;,
        &amp;quot;path&amp;quot;: &amp;quot;/usr/local/texlive/2011/bin/x86_64-darwin:/usr/bin:/usr/local/bin&amp;quot;,
        &amp;quot;cmd&amp;quot;: [&amp;quot;./waf&amp;quot;, &amp;quot;clean&amp;quot;, &amp;quot;mktex&amp;quot;, &amp;quot;configure&amp;quot;, &amp;quot;build&amp;quot;, &amp;quot;view_pdf&amp;quot;]
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Press Cmd+B (on Mac) will do everything&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>